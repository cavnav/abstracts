import type { Node } from "./Node"

export class ContextManager {
  parent: ContextManager | null = null
  variables: Record<string, ContextManager> | null = null
  functions: Record<string, ContextManager> | null = null
  conditions: Record<string, ContextManager> | null = null
  
  constructor(parent: ContextManager | null = null) {   
    this.parent = parent
    
    // üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞—Å–ª–µ–¥—É—é—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ã. –¥–ª—è –∞–≤—Ç–æ –ø–æ–∏—Å–∫–∞.
    // —á—Ç–æ–±—ã –∑–∞–ø–∏—Å—å ‚Äú—à–ª–∞ –≤–≤–µ—Ä—Ö‚Äù ‚Äî –Ω—É–∂–Ω–æ,
    // —á—Ç–æ–±—ã —Ä–æ–¥–∏—Ç–µ–ª—å –∏–º–µ–ª setter, –∞ –Ω–µ –æ–±—ã—á–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ.
    // –¢–æ–≥–¥–∞ JS –Ω–µ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ —É –¥–æ—á–µ—Ä–Ω–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    // Object.create(null) ‚Äî —ç—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç

    this.variables = Object.create(parent?.variables || null)
    this.functions = Object.create(parent?.functions || null)
    this.conditions = Object.create(parent?.conditions || null)
  }

  createChild(): ContextManager {
    return new ContextManager(this)
  }
}